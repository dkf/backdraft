# generated by 'xml2py'
# flags '-kefstd -lusb -o USB.py usb.xml -c -d'
from ctypes import *

_libraries = {}
_libraries['libusb-0.1.so.4'] = CDLL('libusb-0.1.so.4')
STRING = c_char_p
_ATFILE_SOURCE = 1 # Variable c_int '1'
USB_REQ_GET_INTERFACE = 10 # Variable c_int '10'
USB_MAXALTSETTING = 128 # Variable c_int '128'
LONG_MIN = -9223372036854775808 # Variable c_long '-0x08000000000000000l'
USB_DT_ENDPOINT_AUDIO_SIZE = 9 # Variable c_int '9'
__GNU_LIBRARY__ = 6 # Variable c_int '6'
_POSIX2_BC_DIM_MAX = 2048 # Variable c_int '2048'
USB_DT_INTERFACE = 4 # Variable c_int '4'
__USE_LARGEFILE64 = 1 # Variable c_int '1'
_POSIX_LINK_MAX = 8 # Variable c_int '8'
USHRT_MAX = 65535 # Variable c_int '65535'
USB_TYPE_RESERVED = 96 # Variable c_int '96'
XATTR_SIZE_MAX = 65536 # Variable c_int '65536'
MAX_CANON = 255 # Variable c_int '255'
USB_REQ_SET_CONFIGURATION = 9 # Variable c_int '9'
MAX_INPUT = 255 # Variable c_int '255'
__USE_XOPEN2K8 = 1 # Variable c_int '1'
_POSIX_UIO_MAXIOV = 16 # Variable c_int '16'
__USE_POSIX2 = 1 # Variable c_int '1'
USB_CLASS_AUDIO = 1 # Variable c_int '1'
USB_RECIP_ENDPOINT = 2 # Variable c_int '2'
__WORDSIZE = 64 # Variable c_int '64'
_POSIX2_LINE_MAX = 2048 # Variable c_int '2048'
USB_DT_DEVICE = 1 # Variable c_int '1'
IOV_MAX = 1024 # Variable c_int '1024'
_POSIX_RTSIG_MAX = 8 # Variable c_int '8'
_POSIX_SEM_VALUE_MAX = 32767 # Variable c_int '32767'
_POSIX_MAX_CANON = 255 # Variable c_int '255'
SHRT_MIN = -32768 # Variable c_int '-0x00000000000008000'
USB_ENDPOINT_DIR_MASK = 128 # Variable c_int '128'
_POSIX_HOST_NAME_MAX = 255 # Variable c_int '255'
__STDC_IEC_559__ = 1 # Variable c_int '1'
USB_DT_INTERFACE_SIZE = 9 # Variable c_int '9'
_POSIX_SOURCE = 1 # Variable c_int '1'
UINT_MAX = 4294967295L # Variable c_uint '4294967295u'
_LIBC_LIMITS_H_ = 1 # Variable c_int '1'
__USE_ATFILE = 1 # Variable c_int '1'
__GLIBC_HAVE_LONG_LONG = 1 # Variable c_int '1'
USB_DT_STRING = 3 # Variable c_int '3'
USB_RECIP_OTHER = 3 # Variable c_int '3'
USB_REQ_GET_STATUS = 0 # Variable c_int '0'
_POSIX2_CHARCLASS_NAME_MAX = 14 # Variable c_int '14'
USB_ENDPOINT_TYPE_INTERRUPT = 3 # Variable c_int '3'
USB_RECIP_DEVICE = 0 # Variable c_int '0'
USB_REQ_GET_DESCRIPTOR = 6 # Variable c_int '6'
_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 4 # Variable c_int '4'
USB_TYPE_CLASS = 32 # Variable c_int '32'
__USE_POSIX = 1 # Variable c_int '1'
DELAYTIMER_MAX = 2147483647 # Variable c_int '2147483647'
HOST_NAME_MAX = 64 # Variable c_int '64'
_POSIX2_BC_BASE_MAX = 99 # Variable c_int '99'
ULONG_LONG_MAX = 18446744073709551615L # Variable c_ulonglong '-1ull'
SCHAR_MIN = -128 # Variable c_int '-0x00000000000000080'
USB_DT_HID = 33 # Variable c_int '33'
PTHREAD_KEYS_MAX = 1024 # Variable c_int '1024'
PTHREAD_STACK_MIN = 16384 # Variable c_int '16384'
_POSIX_TIMER_MAX = 32 # Variable c_int '32'
USB_RECIP_INTERFACE = 1 # Variable c_int '1'
_POSIX_STREAM_MAX = 8 # Variable c_int '8'
UCHAR_MAX = 255 # Variable c_int '255'
__USE_POSIX199309 = 1 # Variable c_int '1'
_POSIX_TZNAME_MAX = 6 # Variable c_int '6'
_POSIX_OPEN_MAX = 20 # Variable c_int '20'
_BITS_WCHAR_H = 1 # Variable c_int '1'
__GLIBC_MINOR__ = 10 # Variable c_int '10'
__WCHAR_MIN = -2147483648 # Variable c_int '-0x00000000080000000'
USB_MAXCONFIG = 8 # Variable c_int '8'
LIBUSB_HAS_DETACH_KERNEL_DRIVER_NP = 1 # Variable c_int '1'
_POSIX_CLOCKRES_MIN = 20000000 # Variable c_int '20000000'
_ISOC99_SOURCE = 1 # Variable c_int '1'
NGROUPS_MAX = 65536 # Variable c_int '65536'
USB_DT_CONFIG = 2 # Variable c_int '2'
USB_ENDPOINT_TYPE_BULK = 2 # Variable c_int '2'
_POSIX_PIPE_BUF = 512 # Variable c_int '512'
WORD_BIT = 32 # Variable c_int '32'
USB_ENDPOINT_IN = 128 # Variable c_int '128'
_POSIX_ARG_MAX = 4096 # Variable c_int '4096'
MB_LEN_MAX = 16 # Variable c_int '16'
_SVID_SOURCE = 1 # Variable c_int '1'
__USE_XOPEN2K = 1 # Variable c_int '1'
USB_CLASS_HID = 3 # Variable c_int '3'
USB_CLASS_MASS_STORAGE = 8 # Variable c_int '8'
_BITS_POSIX1_LIM_H = 1 # Variable c_int '1'
USB_DT_HUB_NONVAR_SIZE = 7 # Variable c_int '7'
_BITS_POSIX2_LIM_H = 1 # Variable c_int '1'
_POSIX_THREAD_KEYS_MAX = 128 # Variable c_int '128'
_POSIX_SSIZE_MAX = 32767 # Variable c_int '32767'
__USE_GNU = 1 # Variable c_int '1'
__USE_BSD = 1 # Variable c_int '1'
USB_DT_PHYSICAL = 35 # Variable c_int '35'
USB_CLASS_COMM = 2 # Variable c_int '2'
XATTR_LIST_MAX = 65536 # Variable c_int '65536'
_LARGEFILE_SOURCE = 1 # Variable c_int '1'
_POSIX_C_SOURCE = 200809 # Variable c_long '200809l'
MQ_PRIO_MAX = 32768 # Variable c_int '32768'
USB_DT_DEVICE_SIZE = 18 # Variable c_int '18'
USB_DT_CONFIG_SIZE = 9 # Variable c_int '9'
USB_REQ_SET_FEATURE = 3 # Variable c_int '3'
_POSIX_CHILD_MAX = 25 # Variable c_int '25'
_POSIX2_COLL_WEIGHTS_MAX = 2 # Variable c_int '2'
__USE_SVID = 1 # Variable c_int '1'
USB_TYPE_STANDARD = 0 # Variable c_int '0'
__USE_UNIX98 = 1 # Variable c_int '1'
__USE_ANSI = 1 # Variable c_int '1'
__USE_MISC = 1 # Variable c_int '1'
CHARCLASS_NAME_MAX = 2048 # Variable c_int '2048'
USB_ENDPOINT_ADDRESS_MASK = 15 # Variable c_int '15'
__USE_EXTERN_INLINES_IN_LIBC = 1 # Variable c_int '1'
USB_CLASS_PRINTER = 7 # Variable c_int '7'
_POSIX_TTY_NAME_MAX = 9 # Variable c_int '9'
_POSIX_MQ_PRIO_MAX = 32 # Variable c_int '32'
_XOPEN_LIM_H = 1 # Variable c_int '1'
USB_CLASS_HUB = 9 # Variable c_int '9'
_POSIX_MAX_INPUT = 255 # Variable c_int '255'
USB_CLASS_PTP = 6 # Variable c_int '6'
USB_TYPE_VENDOR = 64 # Variable c_int '64'
_STDINT_H = 1 # Variable c_int '1'
_POSIX_PATH_MAX = 256 # Variable c_int '256'
__USE_FORTIFY_LEVEL = 2 # Variable c_int '2'
USB_MAXINTERFACES = 32 # Variable c_int '32'
USB_ENDPOINT_TYPE_ISOCHRONOUS = 1 # Variable c_int '1'
__STDC_ISO_10646__ = 200009 # Variable c_long '200009l'
_POSIX_LOGIN_NAME_MAX = 9 # Variable c_int '9'
__STDC_IEC_559_COMPLEX__ = 1 # Variable c_int '1'
_POSIX_DELAYTIMER_MAX = 32 # Variable c_int '32'
__USE_XOPEN_EXTENDED = 1 # Variable c_int '1'
USB_REQ_GET_CONFIGURATION = 8 # Variable c_int '8'
USB_ENDPOINT_TYPE_MASK = 3 # Variable c_int '3'
ULLONG_MAX = 18446744073709551615L # Variable c_ulonglong '-1ull'
__USE_POSIX199506 = 1 # Variable c_int '1'
SEM_VALUE_MAX = 2147483647 # Variable c_int '2147483647'
__USE_LARGEFILE = 1 # Variable c_int '1'
__USE_EXTERN_INLINES = 1 # Variable c_int '1'
_FEATURES_H = 1 # Variable c_int '1'
ULONG_MAX = 18446744073709551615L # Variable c_ulong '-1ul'
USB_REQ_SET_DESCRIPTOR = 7 # Variable c_int '7'
_POSIX_NGROUPS_MAX = 8 # Variable c_int '8'
_POSIX_SEM_NSEMS_MAX = 256 # Variable c_int '256'
LIBUSB_HAS_GET_DRIVER_NP = 1 # Variable c_int '1'
USB_CLASS_DATA = 10 # Variable c_int '10'
__WORDSIZE_COMPAT32 = 1 # Variable c_int '1'
PIPE_BUF = 4096 # Variable c_int '4096'
_POSIX_SYMLOOP_MAX = 8 # Variable c_int '8'
USB_DT_REPORT = 34 # Variable c_int '34'
USB_DT_ENDPOINT_SIZE = 7 # Variable c_int '7'
_POSIX_QLIMIT = 1 # Variable c_int '1'
LONG_BIT = 64 # Variable c_int '64'
_POSIX2_EXPR_NEST_MAX = 32 # Variable c_int '32'
USB_ENDPOINT_TYPE_CONTROL = 0 # Variable c_int '0'
_POSIX2_BC_STRING_MAX = 1000 # Variable c_int '1000'
_XOPEN_SOURCE_EXTENDED = 1 # Variable c_int '1'
_POSIX_SYMLINK_MAX = 255 # Variable c_int '255'
_POSIX_RE_DUP_MAX = 255 # Variable c_int '255'
AIO_PRIO_DELTA_MAX = 20 # Variable c_int '20'
RTSIG_MAX = 32 # Variable c_int '32'
USB_REQ_SYNCH_FRAME = 12 # Variable c_int '12'
TTY_NAME_MAX = 32 # Variable c_int '32'
_SYS_CDEFS_H = 1 # Variable c_int '1'
RE_DUP_MAX = 32767 # Variable c_int '32767'
_LARGEFILE64_SOURCE = 1 # Variable c_int '1'
__USE_XOPEN = 1 # Variable c_int '1'
_POSIX_AIO_LISTIO_MAX = 2 # Variable c_int '2'
_XOPEN_SOURCE = 700 # Variable c_int '700'
USB_DT_HUB = 41 # Variable c_int '41'
USB_CLASS_PER_INTERFACE = 0 # Variable c_int '0'
XATTR_NAME_MAX = 255 # Variable c_int '255'
LOGIN_NAME_MAX = 256 # Variable c_int '256'
NZERO = 20 # Variable c_int '20'
USB_ERROR_BEGIN = 500000 # Variable c_int '500000'
__USE_ISOC95 = 1 # Variable c_int '1'
USB_REQ_SET_INTERFACE = 11 # Variable c_int '11'
__GLIBC__ = 2 # Variable c_int '2'
_POSIX_SIGQUEUE_MAX = 32 # Variable c_int '32'
_POSIX_AIO_MAX = 1 # Variable c_int '1'
__USE_ISOC99 = 1 # Variable c_int '1'
_POSIX_MQ_OPEN_MAX = 8 # Variable c_int '8'
_POSIX2_BC_SCALE_MAX = 99 # Variable c_int '99'
USB_MAXENDPOINTS = 32 # Variable c_int '32'
LLONG_MIN = -9223372036854775808 # Variable c_longlong '-0x08000000000000000ll'
USB_ENDPOINT_OUT = 0 # Variable c_int '0'
PATH_MAX = 4096 # Variable c_int '4096'
INT_MIN = -2147483648 # Variable c_int '-0x00000000080000000'
NAME_MAX = 255 # Variable c_int '255'
USB_CLASS_VENDOR_SPEC = 255 # Variable c_int '255'
COLL_WEIGHTS_MAX = 255 # Variable c_int '255'
_POSIX_THREAD_THREADS_MAX = 64 # Variable c_int '64'
_BSD_SOURCE = 1 # Variable c_int '1'
_POSIX_NAME_MAX = 14 # Variable c_int '14'
USB_REQ_CLEAR_FEATURE = 1 # Variable c_int '1'
USB_REQ_SET_ADDRESS = 5 # Variable c_int '5'
LONG_LONG_MIN = -9223372036854775808 # Variable c_longlong '-0x08000000000000000ll'
USB_DT_ENDPOINT = 5 # Variable c_int '5'
_POSIX2_RE_DUP_MAX = 255 # Variable c_int '255'
int8_t = c_int8
int16_t = c_int16
int32_t = c_int32
int64_t = c_int64
uint64_t = c_uint64
int_least8_t = c_byte
int_least16_t = c_short
int_least32_t = c_int
int_least64_t = c_long
uint_least8_t = c_ubyte
uint_least16_t = c_ushort
uint_least32_t = c_uint
uint_least64_t = c_ulong
int_fast8_t = c_byte
int_fast16_t = c_long
int_fast32_t = c_long
int_fast64_t = c_long
uint_fast8_t = c_ubyte
uint_fast16_t = c_ulong
uint_fast32_t = c_ulong
uint_fast64_t = c_ulong
intptr_t = c_long
uintptr_t = c_ulong
intmax_t = c_long
uintmax_t = c_ulong
ptrdiff_t = c_long


# ./usb.h 63
class usb_descriptor_header(Structure):
    pass
uint8_t = c_uint8
usb_descriptor_header._fields_ = [
    # ./usb.h 63
    ('bLength', uint8_t),
    ('bDescriptorType', uint8_t),
]
# ./usb.h 69
class usb_string_descriptor(Structure):
    pass
uint16_t = c_uint16
usb_string_descriptor._pack_ = 1
usb_string_descriptor._fields_ = [
    # ./usb.h 69
    ('bLength', uint8_t),
    ('bDescriptorType', uint8_t),
    ('wData', uint16_t * 1),
]
# ./usb.h 76
class usb_hid_descriptor(Structure):
    pass
usb_hid_descriptor._pack_ = 1
usb_hid_descriptor._fields_ = [
    # ./usb.h 76
    ('bLength', uint8_t),
    ('bDescriptorType', uint8_t),
    ('bcdHID', uint16_t),
    ('bCountryCode', uint8_t),
    ('bNumDescriptors', uint8_t),
]
# ./usb.h 89
class usb_endpoint_descriptor(Structure):
    pass
usb_endpoint_descriptor._fields_ = [
    # ./usb.h 89
    ('bLength', uint8_t),
    ('bDescriptorType', uint8_t),
    ('bEndpointAddress', uint8_t),
    ('bmAttributes', uint8_t),
    ('wMaxPacketSize', uint16_t),
    ('bInterval', uint8_t),
    ('bRefresh', uint8_t),
    ('bSynchAddress', uint8_t),
    ('extra', POINTER(c_ubyte)),
    ('extralen', c_int),
]
# ./usb.h 114
class usb_interface_descriptor(Structure):
    pass
usb_interface_descriptor._fields_ = [
    # ./usb.h 114
    ('bLength', uint8_t),
    ('bDescriptorType', uint8_t),
    ('bInterfaceNumber', uint8_t),
    ('bAlternateSetting', uint8_t),
    ('bNumEndpoints', uint8_t),
    ('bInterfaceClass', uint8_t),
    ('bInterfaceSubClass', uint8_t),
    ('bInterfaceProtocol', uint8_t),
    ('iInterface', uint8_t),
    ('endpoint', POINTER(usb_endpoint_descriptor)),
    ('extra', POINTER(c_ubyte)),
    ('extralen', c_int),
]
# ./usb.h 132
class usb_interface(Structure):
    pass
usb_interface._fields_ = [
    # ./usb.h 132
    ('altsetting', POINTER(usb_interface_descriptor)),
    ('num_altsetting', c_int),
]
# ./usb.h 140
class usb_config_descriptor(Structure):
    pass
usb_config_descriptor._fields_ = [
    # ./usb.h 140
    ('bLength', uint8_t),
    ('bDescriptorType', uint8_t),
    ('wTotalLength', uint16_t),
    ('bNumInterfaces', uint8_t),
    ('bConfigurationValue', uint8_t),
    ('iConfiguration', uint8_t),
    ('bmAttributes', uint8_t),
    ('MaxPower', uint8_t),
    ('interface', POINTER(usb_interface)),
    ('extra', POINTER(c_ubyte)),
    ('extralen', c_int),
]
# ./usb.h 157
class usb_device_descriptor(Structure):
    pass
usb_device_descriptor._pack_ = 1
usb_device_descriptor._fields_ = [
    # ./usb.h 157
    ('bLength', uint8_t),
    ('bDescriptorType', uint8_t),
    ('bcdUSB', uint16_t),
    ('bDeviceClass', uint8_t),
    ('bDeviceSubClass', uint8_t),
    ('bDeviceProtocol', uint8_t),
    ('bMaxPacketSize0', uint8_t),
    ('idVendor', uint16_t),
    ('idProduct', uint16_t),
    ('bcdDevice', uint16_t),
    ('iManufacturer', uint8_t),
    ('iProduct', uint8_t),
    ('iSerialNumber', uint8_t),
    ('bNumConfigurations', uint8_t),
]
# ./usb.h 174
class usb_ctrl_setup(Structure):
    pass
usb_ctrl_setup._pack_ = 1
usb_ctrl_setup._fields_ = [
    # ./usb.h 174
    ('bRequestType', uint8_t),
    ('bRequest', uint8_t),
    ('wValue', uint16_t),
    ('wIndex', uint16_t),
    ('wLength', uint16_t),
]
USB_RT_HUB = (USB_TYPE_CLASS | USB_RECIP_DEVICE)
USB_RT_PORT = (USB_TYPE_CLASS | USB_RECIP_OTHER)
USB_PORT_FEAT_POWER = 8
USB_PORT_FEAT_INDICATOR = 22
USB_DIR_IN = 0x80
CTRL_TIMEOUT = 1000
HUB_CHAR_LPSM = 0x0003
HUB_CHAR_PORTIND = 0x0080
# ./usb.h 238
class usb_hub_descriptor(Structure):
    def characteristic(self, i):
        return self.wHubCharacteristics[0] & i
usb_hub_descriptor._fields_ = [
    ("bDescLength", c_ubyte),
    ("bDescriptorType", c_ubyte),
    ("bNbrPorts", c_ubyte),
    ("wHubCharacteristics", c_ubyte * 2),
    ("bPwrOn2PwrGood", c_ubyte),
    ("bHubContrCurrent", c_ubyte),
    ("data", c_ubyte * 2)
]
class usb_device(Structure):
    handle = None
    def is_controllable_hub(self):
        self.get_handle()
        if not self.handle:
            return False
        buf = create_string_buffer(1024)
        length = usb_control_msg(self.handle,
                        USB_DIR_IN | USB_RT_HUB, USB_REQ_GET_DESCRIPTOR,
                        USB_DT_HUB << 8, 0, buf,sizeof(buf), CTRL_TIMEOUT)
        if length >= sizeof(usb_hub_descriptor):
            uhd = cast(buf, POINTER(usb_hub_descriptor))
            if not uhd.contents.characteristic(HUB_CHAR_PORTIND) and uhd.contents.characteristic(HUB_CHAR_LPSM) >= 2:
                return False
            return True
        return False
    def get_handle(self):
        self.handle = usb_open(self)
        return self.handle
    def busnum(self):
        return self.bus.contents.dirname
    def power_on(self, port):
        return self.power(port, USB_REQ_SET_FEATURE)
    def power_off(self, port):
        return self.power(port, USB_REQ_CLEAR_FEATURE)
    def power(self, port, onOff):
        self.get_handle()
        res = usb_control_msg(self.handle, USB_RT_PORT, onOff, USB_PORT_FEAT_POWER, port, None, 0, CTRL_TIMEOUT)
        if res < 0:
            return False
        else:
            return True

# ./usb.h 256
class usb_bus(Structure):
    pass
usb_device._fields_ = [
    # ./usb.h 238
    ('next', POINTER(usb_device)),
    ('prev', POINTER(usb_device)),
    ('filename', c_char * 4097),
    ('bus', POINTER(usb_bus)),
    ('descriptor', usb_device_descriptor),
    ('config', POINTER(usb_config_descriptor)),
    ('dev', c_void_p),
    ('devnum', uint8_t),
    ('num_children', c_ubyte),
    ('children', POINTER(POINTER(usb_device))),
]
uint32_t = c_uint32
usb_bus._fields_ = [
    # ./usb.h 256
    ('next', POINTER(usb_bus)),
    ('prev', POINTER(usb_bus)),
    ('dirname', c_char * 4097),
    ('devices', POINTER(usb_device)),
    ('location', uint32_t),
    ('root_dev', POINTER(usb_device)),
]
# ./usb.h 267
class usb_dev_handle(Structure):
    pass
usb_dev_handle._fields_ = [
    # ./usb.h 267
]
usb_busses = (POINTER(usb_bus)).in_dll(_libraries['libusb-0.1.so.4'], 'usb_busses')
# ./usb.h 280
usb_open = _libraries['libusb-0.1.so.4'].usb_open
usb_open.restype = POINTER(usb_dev_handle)
# usb_open(dev)
usb_open.argtypes = [POINTER(usb_device)]
usb_open.__doc__ = \
"""usb_dev_handle * usb_open(usb_device * dev)
./usb.h:280"""
# ./usb.h 281
usb_close = _libraries['libusb-0.1.so.4'].usb_close
usb_close.restype = c_int
# usb_close(dev)
usb_close.argtypes = [POINTER(usb_dev_handle)]
usb_close.__doc__ = \
"""int usb_close(usb_dev_handle * dev)
./usb.h:281"""
size_t = c_ulong
# ./usb.h 283
usb_get_string = _libraries['libusb-0.1.so.4'].usb_get_string
usb_get_string.restype = c_int
# usb_get_string(dev, index, langid, buf, buflen)
usb_get_string.argtypes = [POINTER(usb_dev_handle), c_int, c_int, STRING, size_t]
usb_get_string.__doc__ = \
"""int usb_get_string(usb_dev_handle * dev, int index, int langid, char * buf, size_t buflen)
./usb.h:283"""
# ./usb.h 285
usb_get_string_simple = _libraries['libusb-0.1.so.4'].usb_get_string_simple
usb_get_string_simple.restype = c_int
# usb_get_string_simple(dev, index, buf, buflen)
usb_get_string_simple.argtypes = [POINTER(usb_dev_handle), c_int, STRING, size_t]
usb_get_string_simple.__doc__ = \
"""int usb_get_string_simple(usb_dev_handle * dev, int index, char * buf, size_t buflen)
./usb.h:285"""
# ./usb.h 289
usb_get_descriptor_by_endpoint = _libraries['libusb-0.1.so.4'].usb_get_descriptor_by_endpoint
usb_get_descriptor_by_endpoint.restype = c_int
# usb_get_descriptor_by_endpoint(udev, ep, type, index, buf, size)
usb_get_descriptor_by_endpoint.argtypes = [POINTER(usb_dev_handle), c_int, c_ubyte, c_ubyte, c_void_p, c_int]
usb_get_descriptor_by_endpoint.__doc__ = \
"""int usb_get_descriptor_by_endpoint(usb_dev_handle * udev, int ep, unsigned char type, unsigned char index, void * buf, int size)
./usb.h:289"""
# ./usb.h 291
usb_get_descriptor = _libraries['libusb-0.1.so.4'].usb_get_descriptor
usb_get_descriptor.restype = c_int
# usb_get_descriptor(udev, type, index, buf, size)
usb_get_descriptor.argtypes = [POINTER(usb_dev_handle), c_ubyte, c_ubyte, c_void_p, c_int]
usb_get_descriptor.__doc__ = \
"""int usb_get_descriptor(usb_dev_handle * udev, unsigned char type, unsigned char index, void * buf, int size)
./usb.h:291"""
# ./usb.h 295
usb_bulk_write = _libraries['libusb-0.1.so.4'].usb_bulk_write
usb_bulk_write.restype = c_int
# usb_bulk_write(dev, ep, bytes, size, timeout)
usb_bulk_write.argtypes = [POINTER(usb_dev_handle), c_int, STRING, c_int, c_int]
usb_bulk_write.__doc__ = \
"""int usb_bulk_write(usb_dev_handle * dev, int ep, unknown * bytes, int size, int timeout)
./usb.h:295"""
# ./usb.h 297
usb_bulk_read = _libraries['libusb-0.1.so.4'].usb_bulk_read
usb_bulk_read.restype = c_int
# usb_bulk_read(dev, ep, bytes, size, timeout)
usb_bulk_read.argtypes = [POINTER(usb_dev_handle), c_int, STRING, c_int, c_int]
usb_bulk_read.__doc__ = \
"""int usb_bulk_read(usb_dev_handle * dev, int ep, char * bytes, int size, int timeout)
./usb.h:297"""
# ./usb.h 299
usb_interrupt_write = _libraries['libusb-0.1.so.4'].usb_interrupt_write
usb_interrupt_write.restype = c_int
# usb_interrupt_write(dev, ep, bytes, size, timeout)
usb_interrupt_write.argtypes = [POINTER(usb_dev_handle), c_int, STRING, c_int, c_int]
usb_interrupt_write.__doc__ = \
"""int usb_interrupt_write(usb_dev_handle * dev, int ep, unknown * bytes, int size, int timeout)
./usb.h:299"""
# ./usb.h 301
usb_interrupt_read = _libraries['libusb-0.1.so.4'].usb_interrupt_read
usb_interrupt_read.restype = c_int
# usb_interrupt_read(dev, ep, bytes, size, timeout)
usb_interrupt_read.argtypes = [POINTER(usb_dev_handle), c_int, STRING, c_int, c_int]
usb_interrupt_read.__doc__ = \
"""int usb_interrupt_read(usb_dev_handle * dev, int ep, char * bytes, int size, int timeout)
./usb.h:301"""
# ./usb.h 303
usb_control_msg = _libraries['libusb-0.1.so.4'].usb_control_msg
usb_control_msg.restype = c_int
# usb_control_msg(dev, requesttype, request, value, index, bytes, size, timeout)
usb_control_msg.argtypes = [POINTER(usb_dev_handle), c_int, c_int, c_int, c_int, STRING, c_int, c_int]
usb_control_msg.__doc__ = \
"""int usb_control_msg(usb_dev_handle * dev, int requesttype, int request, int value, int index, char * bytes, int size, int timeout)
./usb.h:303"""
# ./usb.h 304
usb_set_configuration = _libraries['libusb-0.1.so.4'].usb_set_configuration
usb_set_configuration.restype = c_int
# usb_set_configuration(dev, configuration)
usb_set_configuration.argtypes = [POINTER(usb_dev_handle), c_int]
usb_set_configuration.__doc__ = \
"""int usb_set_configuration(usb_dev_handle * dev, int configuration)
./usb.h:304"""
# ./usb.h 305
usb_claim_interface = _libraries['libusb-0.1.so.4'].usb_claim_interface
usb_claim_interface.restype = c_int
# usb_claim_interface(dev, interface)
usb_claim_interface.argtypes = [POINTER(usb_dev_handle), c_int]
usb_claim_interface.__doc__ = \
"""int usb_claim_interface(usb_dev_handle * dev, int interface)
./usb.h:305"""
# ./usb.h 306
usb_release_interface = _libraries['libusb-0.1.so.4'].usb_release_interface
usb_release_interface.restype = c_int
# usb_release_interface(dev, interface)
usb_release_interface.argtypes = [POINTER(usb_dev_handle), c_int]
usb_release_interface.__doc__ = \
"""int usb_release_interface(usb_dev_handle * dev, int interface)
./usb.h:306"""
# ./usb.h 307
usb_set_altinterface = _libraries['libusb-0.1.so.4'].usb_set_altinterface
usb_set_altinterface.restype = c_int
# usb_set_altinterface(dev, alternate)
usb_set_altinterface.argtypes = [POINTER(usb_dev_handle), c_int]
usb_set_altinterface.__doc__ = \
"""int usb_set_altinterface(usb_dev_handle * dev, int alternate)
./usb.h:307"""
# ./usb.h 308
usb_resetep = _libraries['libusb-0.1.so.4'].usb_resetep
usb_resetep.restype = c_int
# usb_resetep(dev, ep)
usb_resetep.argtypes = [POINTER(usb_dev_handle), c_uint]
usb_resetep.__doc__ = \
"""int usb_resetep(usb_dev_handle * dev, unsigned int ep)
./usb.h:308"""
# ./usb.h 309
usb_clear_halt = _libraries['libusb-0.1.so.4'].usb_clear_halt
usb_clear_halt.restype = c_int
# usb_clear_halt(dev, ep)
usb_clear_halt.argtypes = [POINTER(usb_dev_handle), c_uint]
usb_clear_halt.__doc__ = \
"""int usb_clear_halt(usb_dev_handle * dev, unsigned int ep)
./usb.h:309"""
# ./usb.h 310
usb_reset = _libraries['libusb-0.1.so.4'].usb_reset
usb_reset.restype = c_int
# usb_reset(dev)
usb_reset.argtypes = [POINTER(usb_dev_handle)]
usb_reset.__doc__ = \
"""int usb_reset(usb_dev_handle * dev)
./usb.h:310"""
# ./usb.h 315
usb_get_driver_np = _libraries['libusb-0.1.so.4'].usb_get_driver_np
usb_get_driver_np.restype = c_int
# usb_get_driver_np(dev, interface, name, namelen)
usb_get_driver_np.argtypes = [POINTER(usb_dev_handle), c_int, STRING, c_uint]
usb_get_driver_np.__doc__ = \
"""int usb_get_driver_np(usb_dev_handle * dev, int interface, char * name, unsigned int namelen)
./usb.h:315"""
# ./usb.h 317
usb_detach_kernel_driver_np = _libraries['libusb-0.1.so.4'].usb_detach_kernel_driver_np
usb_detach_kernel_driver_np.restype = c_int
# usb_detach_kernel_driver_np(dev, interface)
usb_detach_kernel_driver_np.argtypes = [POINTER(usb_dev_handle), c_int]
usb_detach_kernel_driver_np.__doc__ = \
"""int usb_detach_kernel_driver_np(usb_dev_handle * dev, int interface)
./usb.h:317"""
# ./usb.h 320
usb_strerror = _libraries['libusb-0.1.so.4'].usb_strerror
usb_strerror.restype = STRING
# usb_strerror()
usb_strerror.argtypes = []
usb_strerror.__doc__ = \
"""char * usb_strerror()
./usb.h:320"""
# ./usb.h 322
usb_init = _libraries['libusb-0.1.so.4'].usb_init
usb_init.restype = None
# usb_init()
usb_init.argtypes = []
usb_init.__doc__ = \
"""void usb_init()
./usb.h:322"""
# ./usb.h 323
usb_set_debug = _libraries['libusb-0.1.so.4'].usb_set_debug
usb_set_debug.restype = None
# usb_set_debug(level)
usb_set_debug.argtypes = [c_int]
usb_set_debug.__doc__ = \
"""void usb_set_debug(int level)
./usb.h:323"""
# ./usb.h 324
usb_find_busses = _libraries['libusb-0.1.so.4'].usb_find_busses
usb_find_busses.restype = c_int
# usb_find_busses()
usb_find_busses.argtypes = []
usb_find_busses.__doc__ = \
"""int usb_find_busses()
./usb.h:324"""
# ./usb.h 325
usb_find_devices = _libraries['libusb-0.1.so.4'].usb_find_devices
usb_find_devices.restype = c_int
# usb_find_devices()
usb_find_devices.argtypes = []
usb_find_devices.__doc__ = \
"""int usb_find_devices()
./usb.h:325"""
# ./usb.h 326
usb_get_device = _libraries['libusb-0.1.so.4'].usb_device
usb_get_device.restype = POINTER(usb_device)
# usb_device(dev)
usb_get_device.argtypes = [POINTER(usb_dev_handle)]
usb_get_device.__doc__ = \
"""usb_device * usb_device(usb_dev_handle * dev)
./usb.h:326"""
# ./usb.h 327
usb_get_busses = _libraries['libusb-0.1.so.4'].usb_get_busses
usb_get_busses.restype = POINTER(usb_bus)
# usb_get_busses()
usb_get_busses.argtypes = []
usb_get_busses.__doc__ = \
"""usb_bus * usb_get_busses()
./usb.h:327"""
__all__ = ['_ATFILE_SOURCE', 'USB_REQ_GET_INTERFACE', 'usb_bulk_read',
           'usb_descriptor_header', '__USE_ANSI', 'LONG_MIN',
           'usb_hid_descriptor', '__GNU_LIBRARY__',
           'LIBUSB_HAS_DETACH_KERNEL_DRIVER_NP', 'size_t',
           'USB_DT_INTERFACE', '__USE_LARGEFILE64', '_POSIX_LINK_MAX',
           'USHRT_MAX', 'USB_TYPE_RESERVED', 'XATTR_SIZE_MAX',
           'usb_interface', 'USB_REQ_SET_CONFIGURATION', 'MAX_INPUT',
           '__USE_XOPEN2K8', '_POSIX_UIO_MAXIOV', '__USE_POSIX2',
           'USB_CLASS_AUDIO', '__STDC_IEC_559_COMPLEX__',
           'USB_RECIP_ENDPOINT', 'RTSIG_MAX', '_POSIX2_LINE_MAX',
           '_FEATURES_H', 'USB_DT_DEVICE', 'IOV_MAX',
           '_POSIX_RTSIG_MAX', 'usb_claim_interface',
           '_POSIX_SEM_VALUE_MAX', 'intptr_t', 'USB_MAXALTSETTING',
           'SHRT_MIN', 'USB_ENDPOINT_DIR_MASK',
           'usb_release_interface', '_POSIX_HOST_NAME_MAX',
           '__STDC_IEC_559__', '__USE_XOPEN_EXTENDED', 'UINT_MAX',
           '_LIBC_LIMITS_H_', '__USE_ATFILE',
           '__GLIBC_HAVE_LONG_LONG', 'usb_get_busses',
           'USB_DT_STRING', 'USB_RECIP_OTHER',
           'USB_DT_ENDPOINT_AUDIO_SIZE', 'uint_fast16_t',
           'USB_ENDPOINT_TYPE_INTERRUPT', 'USB_RECIP_DEVICE',
           'USB_REQ_GET_DESCRIPTOR',
           '_POSIX_THREAD_DESTRUCTOR_ITERATIONS', 'USB_TYPE_CLASS',
           '__USE_POSIX', 'DELAYTIMER_MAX', 'HOST_NAME_MAX',
           'usb_device_descriptor', '_POSIX2_BC_BASE_MAX',
           'ULONG_LONG_MAX', 'SCHAR_MIN', 'USB_DT_HID',
           'PTHREAD_STACK_MIN', '_POSIX_SOURCE', 'intmax_t',
           'int16_t', '_POSIX_STREAM_MAX', 'UCHAR_MAX',
           '__USE_POSIX199309', 'LONG_LONG_MIN',
           '_POSIX_AIO_LISTIO_MAX', 'usb_clear_halt',
           '_POSIX_TZNAME_MAX', '_POSIX_OPEN_MAX', 'usb_strerror',
           '_BITS_WCHAR_H', '__GLIBC_MINOR__', 'CHARCLASS_NAME_MAX',
           'int_least8_t', 'USB_MAXCONFIG', '_POSIX2_BC_DIM_MAX',
           '_POSIX_CLOCKRES_MIN', '_ISOC99_SOURCE', 'NGROUPS_MAX',
           '_SVID_SOURCE', 'usb_config_descriptor', 'MAX_CANON',
           'int_least16_t', '__USE_XOPEN2K', '_POSIX_PIPE_BUF',
           'WORD_BIT', 'usb_busses', '_POSIX_ARG_MAX',
           'uint_least32_t', 'MB_LEN_MAX', 'usb_control_msg',
           'USB_ENDPOINT_TYPE_BULK', 'USB_CLASS_HID',
           'USB_CLASS_MASS_STORAGE', '_BITS_POSIX1_LIM_H',
           'USB_CLASS_PRINTER', 'usb_device', 'USB_DT_CONFIG',
           'USB_DT_HUB_NONVAR_SIZE', '_BITS_POSIX2_LIM_H',
           '_POSIX_THREAD_KEYS_MAX', 'usb_find_busses', 'uint8_t',
           '__USE_GNU', 'usb_get_descriptor', '__USE_BSD',
           'USB_DT_PHYSICAL', 'usb_get_descriptor_by_endpoint',
           'USB_CLASS_COMM', 'XATTR_LIST_MAX', '_POSIX_SIGQUEUE_MAX',
           'usb_interrupt_read', 'uint16_t', 'uint_fast8_t',
           '_LARGEFILE_SOURCE', '_POSIX_C_SOURCE', 'MQ_PRIO_MAX',
           'USB_DT_DEVICE_SIZE', 'int32_t', 'uint_least64_t',
           'usb_get_driver_np', 'USB_REQ_SET_INTERFACE',
           'USB_REQ_SET_FEATURE', '_POSIX_CHILD_MAX',
           '_POSIX2_CHARCLASS_NAME_MAX', '__USE_SVID',
           'USB_TYPE_STANDARD', '__USE_UNIX98', 'USB_REQ_GET_STATUS',
           '_POSIX_SSIZE_MAX', '__USE_MISC', 'USB_RECIP_INTERFACE',
           'usb_detach_kernel_driver_np',
           '__USE_EXTERN_INLINES_IN_LIBC',
           'USB_ENDPOINT_ADDRESS_MASK', 'RE_DUP_MAX',
           '_POSIX_TTY_NAME_MAX', 'usb_get_string_simple',
           '_XOPEN_LIM_H', 'USB_CLASS_HUB', '_POSIX_AIO_MAX',
           '__USE_ISOC99', 'usb_set_debug', 'usb_string_descriptor',
           '_POSIX2_COLL_WEIGHTS_MAX', 'USB_CLASS_PTP',
           'USB_CLASS_VENDOR_SPEC', 'uintptr_t', '_STDINT_H',
           '_POSIX_PATH_MAX', 'usb_dev_handle', '_XOPEN_SOURCE',
           '__USE_FORTIFY_LEVEL', 'USB_MAXINTERFACES',
           'USB_DT_ENDPOINT', 'USB_TYPE_VENDOR',
           '_POSIX_THREAD_THREADS_MAX', 'int_fast8_t', 'uintmax_t',
           '__STDC_ISO_10646__', 'usb_ctrl_setup', '_POSIX_MAX_INPUT',
           '_POSIX_DELAYTIMER_MAX', 'USB_DT_INTERFACE_SIZE',
           'int_least64_t', 'USB_REQ_GET_CONFIGURATION',
           'USB_ENDPOINT_TYPE_MASK', 'ULLONG_MAX', 'SEM_VALUE_MAX',
           '__USE_LARGEFILE', '__USE_EXTERN_INLINES', 'usb_init',
           'usb_find_devices', 'ULONG_MAX', 'int_fast32_t', 'usb_bus',
           'uint64_t', '_POSIX_NGROUPS_MAX', '_POSIX_TIMER_MAX',
           'usb_set_configuration', '__USE_POSIX199506',
           'LIBUSB_HAS_GET_DRIVER_NP', 'USB_CLASS_DATA', 'int64_t',
           '__WORDSIZE_COMPAT32', 'INT_MIN', 'PIPE_BUF',
           '_POSIX_MAX_CANON', '_POSIX_SEM_NSEMS_MAX', 'usb_close',
           '_POSIX_SYMLOOP_MAX', 'int_fast16_t', '__WCHAR_MIN',
           'USB_DT_ENDPOINT_SIZE', 'uint_least8_t', '_POSIX_QLIMIT',
           'LONG_BIT', 'USB_DT_REPORT', 'USB_ENDPOINT_TYPE_CONTROL',
           '_POSIX2_BC_STRING_MAX', 'XATTR_NAME_MAX',
           '_XOPEN_SOURCE_EXTENDED', '_POSIX_SYMLINK_MAX',
           '_POSIX_RE_DUP_MAX', 'AIO_PRIO_DELTA_MAX', '__WORDSIZE',
           'USB_REQ_SYNCH_FRAME', 'TTY_NAME_MAX', 'uint_least16_t',
           'int_fast64_t', '_SYS_CDEFS_H', 'PTHREAD_KEYS_MAX',
           '_LARGEFILE64_SOURCE', '__USE_XOPEN', 'uint32_t',
           'USB_DT_CONFIG_SIZE', 'USB_DT_HUB',
           'USB_CLASS_PER_INTERFACE', 'ptrdiff_t',
           '_POSIX_LOGIN_NAME_MAX', 'LOGIN_NAME_MAX', 'NZERO',
           'USB_ERROR_BEGIN', 'usb_open', '__USE_ISOC95',
           '_POSIX2_EXPR_NEST_MAX', 'int8_t', '__GLIBC__',
           'USB_ENDPOINT_TYPE_ISOCHRONOUS', 'COLL_WEIGHTS_MAX',
           'usb_interrupt_write', 'USB_REQ_SET_DESCRIPTOR',
           '_POSIX_MQ_OPEN_MAX', '_POSIX2_BC_SCALE_MAX',
           'USB_MAXENDPOINTS', 'LLONG_MIN', 'usb_bulk_write',
           'int_least32_t', 'uint_fast32_t', 'uint_fast64_t',
           '_POSIX_NAME_MAX', 'PATH_MAX', 'usb_reset',
           'usb_endpoint_descriptor', 'NAME_MAX', 'usb_get_string',
           '_POSIX_MQ_PRIO_MAX', 'usb_resetep', 'USB_ENDPOINT_IN',
           '_BSD_SOURCE', 'usb_interface_descriptor',
           'USB_REQ_CLEAR_FEATURE', 'USB_REQ_SET_ADDRESS',
           'USB_ENDPOINT_OUT', 'usb_set_altinterface',
           '_POSIX2_RE_DUP_MAX']
